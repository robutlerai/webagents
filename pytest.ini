[tool:pytest]
# Pytest configuration for Robutler tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Markers
markers =
    slow: marks tests as slow (deselect with -m 'not slow')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    mcp: marks tests as MCP-related
    performance: marks tests as performance tests
    auth: marks tests as authentication tests
    skill: marks tests as skill tests
    agent: marks tests as agent tests
    server: marks tests as server tests

# Test output
addopts = 
    --strict-markers
    --tb=short
    --co -q
    -ra
    --cov=robutler
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --asyncio-mode=auto

# Minimum coverage
minversion = 6.0

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore:Support for class-based.*:DeprecationWarning:pydantic.*
    ignore:The event_loop fixture.*:DeprecationWarning:pytest_asyncio.*
    ignore:coroutine.*was never awaited:RuntimeWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for slow tests
timeout = 300

# Parallel execution (uncomment to enable)
# -n auto
